/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const JobDescriptor = {
    type: {
        name: "Composite",
        className: "JobDescriptor",
        modelProperties: {
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AnalysisInput = {
    type: {
        name: "Composite",
        className: "AnalysisInput",
        modelProperties: {
            analysisInput: {
                serializedName: "analysisInput",
                type: {
                    name: "Composite",
                    className: "MultiLanguageBatchInput"
                }
            }
        }
    }
};
export const MultiLanguageBatchInput = {
    type: {
        name: "Composite",
        className: "MultiLanguageBatchInput",
        modelProperties: {
            documents: {
                serializedName: "documents",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextDocumentInput"
                        }
                    }
                }
            }
        }
    }
};
export const TextDocumentInput = {
    type: {
        name: "Composite",
        className: "TextDocumentInput",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            text: {
                serializedName: "text",
                required: true,
                type: {
                    name: "String"
                }
            },
            language: {
                serializedName: "language",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const JobManifest = {
    type: {
        name: "Composite",
        className: "JobManifest",
        modelProperties: {
            tasks: {
                serializedName: "tasks",
                type: {
                    name: "Composite",
                    className: "JobManifestTasks"
                }
            }
        }
    }
};
export const JobManifestTasks = {
    type: {
        name: "Composite",
        className: "JobManifestTasks",
        modelProperties: {
            entityRecognitionTasks: {
                serializedName: "entityRecognitionTasks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EntitiesTask"
                        }
                    }
                }
            },
            entityRecognitionPiiTasks: {
                serializedName: "entityRecognitionPiiTasks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PiiTask"
                        }
                    }
                }
            },
            keyPhraseExtractionTasks: {
                serializedName: "keyPhraseExtractionTasks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "KeyPhrasesTask"
                        }
                    }
                }
            },
            entityLinkingTasks: {
                serializedName: "entityLinkingTasks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EntityLinkingTask"
                        }
                    }
                }
            },
            sentimentAnalysisTasks: {
                serializedName: "sentimentAnalysisTasks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SentimentAnalysisTask"
                        }
                    }
                }
            }
        }
    }
};
export const EntitiesTask = {
    type: {
        name: "Composite",
        className: "EntitiesTask",
        modelProperties: {
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Composite",
                    className: "EntitiesTaskParameters"
                }
            }
        }
    }
};
export const EntitiesTaskParameters = {
    type: {
        name: "Composite",
        className: "EntitiesTaskParameters",
        modelProperties: {
            modelVersion: {
                defaultValue: "latest",
                serializedName: "model-version",
                type: {
                    name: "String"
                }
            },
            loggingOptOut: {
                serializedName: "loggingOptOut",
                type: {
                    name: "Boolean"
                }
            },
            stringIndexType: {
                serializedName: "stringIndexType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PiiTask = {
    type: {
        name: "Composite",
        className: "PiiTask",
        modelProperties: {
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Composite",
                    className: "PiiTaskParameters"
                }
            }
        }
    }
};
export const PiiTaskParameters = {
    type: {
        name: "Composite",
        className: "PiiTaskParameters",
        modelProperties: {
            domain: {
                defaultValue: "none",
                serializedName: "domain",
                type: {
                    name: "String"
                }
            },
            modelVersion: {
                defaultValue: "latest",
                serializedName: "model-version",
                type: {
                    name: "String"
                }
            },
            loggingOptOut: {
                defaultValue: true,
                serializedName: "loggingOptOut",
                type: {
                    name: "Boolean"
                }
            },
            piiCategories: {
                constraints: {
                    UniqueItems: true
                },
                serializedName: "piiCategories",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            stringIndexType: {
                serializedName: "stringIndexType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const KeyPhrasesTask = {
    type: {
        name: "Composite",
        className: "KeyPhrasesTask",
        modelProperties: {
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Composite",
                    className: "KeyPhrasesTaskParameters"
                }
            }
        }
    }
};
export const KeyPhrasesTaskParameters = {
    type: {
        name: "Composite",
        className: "KeyPhrasesTaskParameters",
        modelProperties: {
            modelVersion: {
                defaultValue: "latest",
                serializedName: "model-version",
                type: {
                    name: "String"
                }
            },
            loggingOptOut: {
                serializedName: "loggingOptOut",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const EntityLinkingTask = {
    type: {
        name: "Composite",
        className: "EntityLinkingTask",
        modelProperties: {
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Composite",
                    className: "EntityLinkingTaskParameters"
                }
            }
        }
    }
};
export const EntityLinkingTaskParameters = {
    type: {
        name: "Composite",
        className: "EntityLinkingTaskParameters",
        modelProperties: {
            modelVersion: {
                defaultValue: "latest",
                serializedName: "model-version",
                type: {
                    name: "String"
                }
            },
            loggingOptOut: {
                serializedName: "loggingOptOut",
                type: {
                    name: "Boolean"
                }
            },
            stringIndexType: {
                serializedName: "stringIndexType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SentimentAnalysisTask = {
    type: {
        name: "Composite",
        className: "SentimentAnalysisTask",
        modelProperties: {
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Composite",
                    className: "SentimentAnalysisTaskParameters"
                }
            }
        }
    }
};
export const SentimentAnalysisTaskParameters = {
    type: {
        name: "Composite",
        className: "SentimentAnalysisTaskParameters",
        modelProperties: {
            modelVersion: {
                defaultValue: "latest",
                serializedName: "model-version",
                type: {
                    name: "String"
                }
            },
            loggingOptOut: {
                serializedName: "loggingOptOut",
                type: {
                    name: "Boolean"
                }
            },
            opinionMining: {
                serializedName: "opinionMining",
                type: {
                    name: "Boolean"
                }
            },
            stringIndexType: {
                serializedName: "stringIndexType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ErrorResponse = {
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "TextAnalyticsError"
                }
            }
        }
    }
};
export const TextAnalyticsError = {
    type: {
        name: "Composite",
        className: "TextAnalyticsError",
        modelProperties: {
            code: {
                serializedName: "code",
                required: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                required: true,
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            innererror: {
                serializedName: "innererror",
                type: {
                    name: "Composite",
                    className: "InnerError"
                }
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextAnalyticsError"
                        }
                    }
                }
            }
        }
    }
};
export const InnerError = {
    type: {
        name: "Composite",
        className: "InnerError",
        modelProperties: {
            code: {
                serializedName: "code",
                required: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                required: true,
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            innererror: {
                serializedName: "innererror",
                type: {
                    name: "Composite",
                    className: "InnerError"
                }
            }
        }
    }
};
export const JobMetadata = {
    type: {
        name: "Composite",
        className: "JobMetadata",
        modelProperties: {
            createdDateTime: {
                serializedName: "createdDateTime",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            expirationDateTime: {
                serializedName: "expirationDateTime",
                type: {
                    name: "DateTime"
                }
            },
            jobId: {
                serializedName: "jobId",
                required: true,
                type: {
                    name: "Uuid"
                }
            },
            lastUpdateDateTime: {
                serializedName: "lastUpdateDateTime",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "notStarted",
                        "running",
                        "succeeded",
                        "failed",
                        "rejected",
                        "cancelled",
                        "cancelling"
                    ]
                }
            }
        }
    }
};
export const AnalyzeJobDisplayName = {
    type: {
        name: "Composite",
        className: "AnalyzeJobDisplayName",
        modelProperties: {
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TasksState = {
    type: {
        name: "Composite",
        className: "TasksState",
        modelProperties: {
            tasks: {
                serializedName: "tasks",
                type: {
                    name: "Composite",
                    className: "TasksStateTasks"
                }
            }
        }
    }
};
export const TasksStateTasks = {
    type: {
        name: "Composite",
        className: "TasksStateTasks",
        modelProperties: {
            completed: {
                serializedName: "completed",
                required: true,
                type: {
                    name: "Number"
                }
            },
            failed: {
                serializedName: "failed",
                required: true,
                type: {
                    name: "Number"
                }
            },
            inProgress: {
                serializedName: "inProgress",
                required: true,
                type: {
                    name: "Number"
                }
            },
            total: {
                serializedName: "total",
                required: true,
                type: {
                    name: "Number"
                }
            },
            entityRecognitionTasks: {
                serializedName: "entityRecognitionTasks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TasksStateTasksEntityRecognitionTasksItem"
                        }
                    }
                }
            },
            entityRecognitionPiiTasks: {
                serializedName: "entityRecognitionPiiTasks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TasksStateTasksEntityRecognitionPiiTasksItem"
                        }
                    }
                }
            },
            keyPhraseExtractionTasks: {
                serializedName: "keyPhraseExtractionTasks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TasksStateTasksKeyPhraseExtractionTasksItem"
                        }
                    }
                }
            },
            entityLinkingTasks: {
                serializedName: "entityLinkingTasks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TasksStateTasksEntityLinkingTasksItem"
                        }
                    }
                }
            },
            sentimentAnalysisTasks: {
                serializedName: "sentimentAnalysisTasks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TasksStateTasksSentimentAnalysisTasksItem"
                        }
                    }
                }
            }
        }
    }
};
export const TaskState = {
    type: {
        name: "Composite",
        className: "TaskState",
        modelProperties: {
            lastUpdateDateTime: {
                serializedName: "lastUpdateDateTime",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "notStarted",
                        "running",
                        "succeeded",
                        "failed",
                        "rejected",
                        "cancelled",
                        "cancelling"
                    ]
                }
            }
        }
    }
};
export const EntitiesTaskResult = {
    type: {
        name: "Composite",
        className: "EntitiesTaskResult",
        modelProperties: {
            results: {
                serializedName: "results",
                type: {
                    name: "Composite",
                    className: "EntitiesResult"
                }
            }
        }
    }
};
export const EntitiesResult = {
    type: {
        name: "Composite",
        className: "EntitiesResult",
        modelProperties: {
            documents: {
                serializedName: "documents",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentEntities"
                        }
                    }
                }
            },
            errors: {
                serializedName: "errors",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentError"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentBatchStatistics"
                }
            },
            modelVersion: {
                serializedName: "modelVersion",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DocumentEntities = {
    type: {
        name: "Composite",
        className: "DocumentEntities",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            entities: {
                serializedName: "entities",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Entity"
                        }
                    }
                }
            },
            warnings: {
                serializedName: "warnings",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextAnalyticsWarning"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentStatistics"
                }
            }
        }
    }
};
export const Entity = {
    type: {
        name: "Composite",
        className: "Entity",
        modelProperties: {
            text: {
                serializedName: "text",
                required: true,
                type: {
                    name: "String"
                }
            },
            category: {
                serializedName: "category",
                required: true,
                type: {
                    name: "String"
                }
            },
            subCategory: {
                serializedName: "subcategory",
                type: {
                    name: "String"
                }
            },
            offset: {
                serializedName: "offset",
                required: true,
                type: {
                    name: "Number"
                }
            },
            length: {
                serializedName: "length",
                required: true,
                type: {
                    name: "Number"
                }
            },
            confidenceScore: {
                serializedName: "confidenceScore",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const TextAnalyticsWarning = {
    type: {
        name: "Composite",
        className: "TextAnalyticsWarning",
        modelProperties: {
            code: {
                serializedName: "code",
                required: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TextDocumentStatistics = {
    type: {
        name: "Composite",
        className: "TextDocumentStatistics",
        modelProperties: {
            characterCount: {
                serializedName: "charactersCount",
                required: true,
                type: {
                    name: "Number"
                }
            },
            transactionCount: {
                serializedName: "transactionsCount",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const DocumentError = {
    type: {
        name: "Composite",
        className: "DocumentError",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "TextAnalyticsError"
                }
            }
        }
    }
};
export const TextDocumentBatchStatistics = {
    type: {
        name: "Composite",
        className: "TextDocumentBatchStatistics",
        modelProperties: {
            documentCount: {
                serializedName: "documentsCount",
                required: true,
                type: {
                    name: "Number"
                }
            },
            validDocumentCount: {
                serializedName: "validDocumentsCount",
                required: true,
                type: {
                    name: "Number"
                }
            },
            erroneousDocumentCount: {
                serializedName: "erroneousDocumentsCount",
                required: true,
                type: {
                    name: "Number"
                }
            },
            transactionCount: {
                serializedName: "transactionsCount",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const PiiTaskResult = {
    type: {
        name: "Composite",
        className: "PiiTaskResult",
        modelProperties: {
            results: {
                serializedName: "results",
                type: {
                    name: "Composite",
                    className: "PiiResult"
                }
            }
        }
    }
};
export const PiiResult = {
    type: {
        name: "Composite",
        className: "PiiResult",
        modelProperties: {
            documents: {
                serializedName: "documents",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PiiDocumentEntities"
                        }
                    }
                }
            },
            errors: {
                serializedName: "errors",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentError"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentBatchStatistics"
                }
            },
            modelVersion: {
                serializedName: "modelVersion",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PiiDocumentEntities = {
    type: {
        name: "Composite",
        className: "PiiDocumentEntities",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            redactedText: {
                serializedName: "redactedText",
                required: true,
                type: {
                    name: "String"
                }
            },
            entities: {
                serializedName: "entities",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Entity"
                        }
                    }
                }
            },
            warnings: {
                serializedName: "warnings",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextAnalyticsWarning"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentStatistics"
                }
            }
        }
    }
};
export const KeyPhraseTaskResult = {
    type: {
        name: "Composite",
        className: "KeyPhraseTaskResult",
        modelProperties: {
            results: {
                serializedName: "results",
                type: {
                    name: "Composite",
                    className: "KeyPhraseResult"
                }
            }
        }
    }
};
export const KeyPhraseResult = {
    type: {
        name: "Composite",
        className: "KeyPhraseResult",
        modelProperties: {
            documents: {
                serializedName: "documents",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentKeyPhrases"
                        }
                    }
                }
            },
            errors: {
                serializedName: "errors",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentError"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentBatchStatistics"
                }
            },
            modelVersion: {
                serializedName: "modelVersion",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DocumentKeyPhrases = {
    type: {
        name: "Composite",
        className: "DocumentKeyPhrases",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            keyPhrases: {
                serializedName: "keyPhrases",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            warnings: {
                serializedName: "warnings",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextAnalyticsWarning"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentStatistics"
                }
            }
        }
    }
};
export const EntityLinkingTaskResult = {
    type: {
        name: "Composite",
        className: "EntityLinkingTaskResult",
        modelProperties: {
            results: {
                serializedName: "results",
                type: {
                    name: "Composite",
                    className: "EntityLinkingResult"
                }
            }
        }
    }
};
export const EntityLinkingResult = {
    type: {
        name: "Composite",
        className: "EntityLinkingResult",
        modelProperties: {
            documents: {
                serializedName: "documents",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentLinkedEntities"
                        }
                    }
                }
            },
            errors: {
                serializedName: "errors",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentError"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentBatchStatistics"
                }
            },
            modelVersion: {
                serializedName: "modelVersion",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DocumentLinkedEntities = {
    type: {
        name: "Composite",
        className: "DocumentLinkedEntities",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            entities: {
                serializedName: "entities",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LinkedEntity"
                        }
                    }
                }
            },
            warnings: {
                serializedName: "warnings",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextAnalyticsWarning"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentStatistics"
                }
            }
        }
    }
};
export const LinkedEntity = {
    type: {
        name: "Composite",
        className: "LinkedEntity",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            matches: {
                serializedName: "matches",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Match"
                        }
                    }
                }
            },
            language: {
                serializedName: "language",
                required: true,
                type: {
                    name: "String"
                }
            },
            dataSourceEntityId: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                required: true,
                type: {
                    name: "String"
                }
            },
            dataSource: {
                serializedName: "dataSource",
                required: true,
                type: {
                    name: "String"
                }
            },
            bingEntitySearchApiId: {
                serializedName: "bingId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Match = {
    type: {
        name: "Composite",
        className: "Match",
        modelProperties: {
            confidenceScore: {
                serializedName: "confidenceScore",
                required: true,
                type: {
                    name: "Number"
                }
            },
            text: {
                serializedName: "text",
                required: true,
                type: {
                    name: "String"
                }
            },
            offset: {
                serializedName: "offset",
                required: true,
                type: {
                    name: "Number"
                }
            },
            length: {
                serializedName: "length",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const SentimentTaskResult = {
    type: {
        name: "Composite",
        className: "SentimentTaskResult",
        modelProperties: {
            results: {
                serializedName: "results",
                type: {
                    name: "Composite",
                    className: "SentimentResponse"
                }
            }
        }
    }
};
export const SentimentResponse = {
    type: {
        name: "Composite",
        className: "SentimentResponse",
        modelProperties: {
            documents: {
                serializedName: "documents",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentSentiment"
                        }
                    }
                }
            },
            errors: {
                serializedName: "errors",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentError"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentBatchStatistics"
                }
            },
            modelVersion: {
                serializedName: "modelVersion",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DocumentSentiment = {
    type: {
        name: "Composite",
        className: "DocumentSentiment",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            sentiment: {
                serializedName: "sentiment",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: ["positive", "neutral", "negative", "mixed"]
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentStatistics"
                }
            },
            confidenceScores: {
                serializedName: "confidenceScores",
                type: {
                    name: "Composite",
                    className: "SentimentConfidenceScores"
                }
            },
            sentenceSentiments: {
                serializedName: "sentences",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SentenceSentiment"
                        }
                    }
                }
            },
            warnings: {
                serializedName: "warnings",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextAnalyticsWarning"
                        }
                    }
                }
            }
        }
    }
};
export const SentimentConfidenceScores = {
    type: {
        name: "Composite",
        className: "SentimentConfidenceScores",
        modelProperties: {
            positive: {
                serializedName: "positive",
                required: true,
                type: {
                    name: "Number"
                }
            },
            neutral: {
                serializedName: "neutral",
                required: true,
                type: {
                    name: "Number"
                }
            },
            negative: {
                serializedName: "negative",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const SentenceSentiment = {
    type: {
        name: "Composite",
        className: "SentenceSentiment",
        modelProperties: {
            text: {
                serializedName: "text",
                required: true,
                type: {
                    name: "String"
                }
            },
            sentiment: {
                serializedName: "sentiment",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: ["positive", "neutral", "negative"]
                }
            },
            confidenceScores: {
                serializedName: "confidenceScores",
                type: {
                    name: "Composite",
                    className: "SentimentConfidenceScores"
                }
            },
            offset: {
                serializedName: "offset",
                required: true,
                type: {
                    name: "Number"
                }
            },
            length: {
                serializedName: "length",
                required: true,
                type: {
                    name: "Number"
                }
            },
            targets: {
                serializedName: "targets",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SentenceTarget"
                        }
                    }
                }
            },
            assessments: {
                serializedName: "assessments",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SentenceAssessment"
                        }
                    }
                }
            }
        }
    }
};
export const SentenceTarget = {
    type: {
        name: "Composite",
        className: "SentenceTarget",
        modelProperties: {
            sentiment: {
                serializedName: "sentiment",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: ["positive", "mixed", "negative"]
                }
            },
            confidenceScores: {
                serializedName: "confidenceScores",
                type: {
                    name: "Composite",
                    className: "TargetConfidenceScoreLabel"
                }
            },
            offset: {
                serializedName: "offset",
                required: true,
                type: {
                    name: "Number"
                }
            },
            length: {
                serializedName: "length",
                required: true,
                type: {
                    name: "Number"
                }
            },
            text: {
                serializedName: "text",
                required: true,
                type: {
                    name: "String"
                }
            },
            relations: {
                serializedName: "relations",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TargetRelation"
                        }
                    }
                }
            }
        }
    }
};
export const TargetConfidenceScoreLabel = {
    type: {
        name: "Composite",
        className: "TargetConfidenceScoreLabel",
        modelProperties: {
            positive: {
                serializedName: "positive",
                required: true,
                type: {
                    name: "Number"
                }
            },
            negative: {
                serializedName: "negative",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const TargetRelation = {
    type: {
        name: "Composite",
        className: "TargetRelation",
        modelProperties: {
            relationType: {
                serializedName: "relationType",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: ["assessment", "target"]
                }
            },
            ref: {
                serializedName: "ref",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SentenceAssessment = {
    type: {
        name: "Composite",
        className: "SentenceAssessment",
        modelProperties: {
            sentiment: {
                serializedName: "sentiment",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: ["positive", "mixed", "negative"]
                }
            },
            confidenceScores: {
                serializedName: "confidenceScores",
                type: {
                    name: "Composite",
                    className: "TargetConfidenceScoreLabel"
                }
            },
            offset: {
                serializedName: "offset",
                required: true,
                type: {
                    name: "Number"
                }
            },
            length: {
                serializedName: "length",
                required: true,
                type: {
                    name: "Number"
                }
            },
            text: {
                serializedName: "text",
                required: true,
                type: {
                    name: "String"
                }
            },
            isNegated: {
                serializedName: "isNegated",
                required: true,
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const AnalyzeJobErrorsAndStatistics = {
    type: {
        name: "Composite",
        className: "AnalyzeJobErrorsAndStatistics",
        modelProperties: {
            errors: {
                serializedName: "errors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextAnalyticsError"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentBatchStatistics"
                }
            }
        }
    }
};
export const Pagination = {
    type: {
        name: "Composite",
        className: "Pagination",
        modelProperties: {
            nextLink: {
                serializedName: "@nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const HealthcareTaskResult = {
    type: {
        name: "Composite",
        className: "HealthcareTaskResult",
        modelProperties: {
            results: {
                serializedName: "results",
                type: {
                    name: "Composite",
                    className: "HealthcareResult"
                }
            },
            errors: {
                serializedName: "errors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextAnalyticsError"
                        }
                    }
                }
            }
        }
    }
};
export const HealthcareResult = {
    type: {
        name: "Composite",
        className: "HealthcareResult",
        modelProperties: {
            documents: {
                serializedName: "documents",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentHealthcareEntities"
                        }
                    }
                }
            },
            errors: {
                serializedName: "errors",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentError"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentBatchStatistics"
                }
            },
            modelVersion: {
                serializedName: "modelVersion",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DocumentHealthcareEntities = {
    type: {
        name: "Composite",
        className: "DocumentHealthcareEntities",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            entities: {
                serializedName: "entities",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HealthcareEntity"
                        }
                    }
                }
            },
            relations: {
                serializedName: "relations",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HealthcareRelation"
                        }
                    }
                }
            },
            warnings: {
                serializedName: "warnings",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextAnalyticsWarning"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentStatistics"
                }
            }
        }
    }
};
export const HealthcareEntityProperties = {
    type: {
        name: "Composite",
        className: "HealthcareEntityProperties",
        modelProperties: {
            text: {
                serializedName: "text",
                required: true,
                type: {
                    name: "String"
                }
            },
            category: {
                serializedName: "category",
                required: true,
                type: {
                    name: "String"
                }
            },
            subcategory: {
                serializedName: "subcategory",
                type: {
                    name: "String"
                }
            },
            offset: {
                serializedName: "offset",
                required: true,
                type: {
                    name: "Number"
                }
            },
            length: {
                serializedName: "length",
                required: true,
                type: {
                    name: "Number"
                }
            },
            confidenceScore: {
                serializedName: "confidenceScore",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const HealthcareLinkingProperties = {
    type: {
        name: "Composite",
        className: "HealthcareLinkingProperties",
        modelProperties: {
            assertion: {
                serializedName: "assertion",
                type: {
                    name: "Composite",
                    className: "HealthcareAssertion"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            links: {
                serializedName: "links",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HealthcareEntityLink"
                        }
                    }
                }
            }
        }
    }
};
export const HealthcareAssertion = {
    type: {
        name: "Composite",
        className: "HealthcareAssertion",
        modelProperties: {
            conditionality: {
                serializedName: "conditionality",
                type: {
                    name: "Enum",
                    allowedValues: ["hypothetical", "conditional"]
                }
            },
            certainty: {
                serializedName: "certainty",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "positive",
                        "positivePossible",
                        "neutralPossible",
                        "negativePossible",
                        "negative"
                    ]
                }
            },
            association: {
                serializedName: "association",
                type: {
                    name: "Enum",
                    allowedValues: ["subject", "other"]
                }
            }
        }
    }
};
export const HealthcareEntityLink = {
    type: {
        name: "Composite",
        className: "HealthcareEntityLink",
        modelProperties: {
            dataSource: {
                serializedName: "dataSource",
                required: true,
                type: {
                    name: "String"
                }
            },
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const HealthcareRelation = {
    type: {
        name: "Composite",
        className: "HealthcareRelation",
        modelProperties: {
            relationType: {
                serializedName: "relationType",
                required: true,
                type: {
                    name: "String"
                }
            },
            entities: {
                serializedName: "entities",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HealthcareRelationEntity"
                        }
                    }
                }
            }
        }
    }
};
export const HealthcareRelationEntity = {
    type: {
        name: "Composite",
        className: "HealthcareRelationEntity",
        modelProperties: {
            ref: {
                serializedName: "ref",
                required: true,
                type: {
                    name: "String"
                }
            },
            role: {
                serializedName: "role",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LanguageBatchInput = {
    type: {
        name: "Composite",
        className: "LanguageBatchInput",
        modelProperties: {
            documents: {
                serializedName: "documents",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DetectLanguageInput"
                        }
                    }
                }
            }
        }
    }
};
export const DetectLanguageInput = {
    type: {
        name: "Composite",
        className: "DetectLanguageInput",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            text: {
                serializedName: "text",
                required: true,
                type: {
                    name: "String"
                }
            },
            countryHint: {
                serializedName: "countryHint",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LanguageResult = {
    type: {
        name: "Composite",
        className: "LanguageResult",
        modelProperties: {
            documents: {
                serializedName: "documents",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentLanguage"
                        }
                    }
                }
            },
            errors: {
                serializedName: "errors",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentError"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentBatchStatistics"
                }
            },
            modelVersion: {
                serializedName: "modelVersion",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DocumentLanguage = {
    type: {
        name: "Composite",
        className: "DocumentLanguage",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            detectedLanguage: {
                serializedName: "detectedLanguage",
                type: {
                    name: "Composite",
                    className: "DetectedLanguage"
                }
            },
            warnings: {
                serializedName: "warnings",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextAnalyticsWarning"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentStatistics"
                }
            }
        }
    }
};
export const DetectedLanguage = {
    type: {
        name: "Composite",
        className: "DetectedLanguage",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            iso6391Name: {
                serializedName: "iso6391Name",
                required: true,
                type: {
                    name: "String"
                }
            },
            confidenceScore: {
                serializedName: "confidenceScore",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const AnalyzeBatchInput = {
    type: {
        name: "Composite",
        className: "AnalyzeBatchInput",
        modelProperties: Object.assign(Object.assign(Object.assign({}, JobDescriptor.type.modelProperties), AnalysisInput.type.modelProperties), JobManifest.type.modelProperties)
    }
};
export const AnalyzeJobMetadata = {
    type: {
        name: "Composite",
        className: "AnalyzeJobMetadata",
        modelProperties: Object.assign(Object.assign({}, JobMetadata.type.modelProperties), AnalyzeJobDisplayName.type.modelProperties)
    }
};
export const HealthcareJobState = {
    type: {
        name: "Composite",
        className: "HealthcareJobState",
        modelProperties: Object.assign(Object.assign(Object.assign({}, JobMetadata.type.modelProperties), HealthcareTaskResult.type.modelProperties), Pagination.type.modelProperties)
    }
};
export const AnalyzeJobState = {
    type: {
        name: "Composite",
        className: "AnalyzeJobState",
        modelProperties: Object.assign(Object.assign(Object.assign(Object.assign({}, AnalyzeJobMetadata.type.modelProperties), TasksState.type.modelProperties), AnalyzeJobErrorsAndStatistics.type.modelProperties), Pagination.type.modelProperties)
    }
};
export const TasksStateTasksEntityRecognitionTasksItem = {
    type: {
        name: "Composite",
        className: "TasksStateTasksEntityRecognitionTasksItem",
        modelProperties: Object.assign(Object.assign({}, TaskState.type.modelProperties), EntitiesTaskResult.type.modelProperties)
    }
};
export const TasksStateTasksEntityRecognitionPiiTasksItem = {
    type: {
        name: "Composite",
        className: "TasksStateTasksEntityRecognitionPiiTasksItem",
        modelProperties: Object.assign(Object.assign({}, TaskState.type.modelProperties), PiiTaskResult.type.modelProperties)
    }
};
export const TasksStateTasksKeyPhraseExtractionTasksItem = {
    type: {
        name: "Composite",
        className: "TasksStateTasksKeyPhraseExtractionTasksItem",
        modelProperties: Object.assign(Object.assign({}, TaskState.type.modelProperties), KeyPhraseTaskResult.type.modelProperties)
    }
};
export const TasksStateTasksEntityLinkingTasksItem = {
    type: {
        name: "Composite",
        className: "TasksStateTasksEntityLinkingTasksItem",
        modelProperties: Object.assign(Object.assign({}, TaskState.type.modelProperties), EntityLinkingTaskResult.type.modelProperties)
    }
};
export const TasksStateTasksSentimentAnalysisTasksItem = {
    type: {
        name: "Composite",
        className: "TasksStateTasksSentimentAnalysisTasksItem",
        modelProperties: Object.assign(Object.assign({}, TaskState.type.modelProperties), SentimentTaskResult.type.modelProperties)
    }
};
export const HealthcareEntity = {
    type: {
        name: "Composite",
        className: "HealthcareEntity",
        modelProperties: Object.assign(Object.assign({}, HealthcareEntityProperties.type.modelProperties), HealthcareLinkingProperties.type.modelProperties)
    }
};
export const GeneratedClientAnalyzeHeaders = {
    type: {
        name: "Composite",
        className: "GeneratedClientAnalyzeHeaders",
        modelProperties: {
            operationLocation: {
                serializedName: "operation-location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const GeneratedClientCancelHealthJobHeaders = {
    type: {
        name: "Composite",
        className: "GeneratedClientCancelHealthJobHeaders",
        modelProperties: {
            operationLocation: {
                serializedName: "operation-location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const GeneratedClientHealthHeaders = {
    type: {
        name: "Composite",
        className: "GeneratedClientHealthHeaders",
        modelProperties: {
            operationLocation: {
                serializedName: "operation-location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map