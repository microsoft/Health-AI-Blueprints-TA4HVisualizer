{"version":3,"file":"generatedClient.js","sourceRoot":"","sources":["../../../src/generated/generatedClient.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport { GeneratedClientContext } from \"./generatedClientContext\";\nimport {\n  GeneratedClientOptionalParams,\n  GeneratedClientAnalyzeOptionalParams,\n  GeneratedClientAnalyzeResponse,\n  GeneratedClientAnalyzeStatusOptionalParams,\n  GeneratedClientAnalyzeStatusResponse,\n  GeneratedClientHealthStatusOptionalParams,\n  GeneratedClientHealthStatusResponse,\n  GeneratedClientCancelHealthJobOptionalParams,\n  GeneratedClientCancelHealthJobResponse,\n  MultiLanguageBatchInput,\n  GeneratedClientHealthOptionalParams,\n  GeneratedClientHealthResponse,\n  GeneratedClientEntitiesRecognitionGeneralOptionalParams,\n  GeneratedClientEntitiesRecognitionGeneralResponse,\n  GeneratedClientEntitiesRecognitionPiiOptionalParams,\n  GeneratedClientEntitiesRecognitionPiiResponse,\n  GeneratedClientEntitiesLinkingOptionalParams,\n  GeneratedClientEntitiesLinkingResponse,\n  GeneratedClientKeyPhrasesOptionalParams,\n  GeneratedClientKeyPhrasesResponse,\n  LanguageBatchInput,\n  GeneratedClientLanguagesOptionalParams,\n  GeneratedClientLanguagesResponse,\n  GeneratedClientSentimentOptionalParams,\n  GeneratedClientSentimentResponse\n} from \"./models\";\n\n/** @internal */\nexport class GeneratedClient extends GeneratedClientContext {\n  /**\n   * Initializes a new instance of the GeneratedClient class.\n   * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:\n   *                 https://westus.api.cognitive.microsoft.com).\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: GeneratedClientOptionalParams) {\n    super(endpoint, options);\n  }\n\n  /**\n   * Submit a collection of text documents for analysis. Specify one or more unique tasks to be executed.\n   * @param options The options parameters.\n   */\n  analyze(\n    options?: GeneratedClientAnalyzeOptionalParams\n  ): Promise<GeneratedClientAnalyzeResponse> {\n    return this.sendOperationRequest({ options }, analyzeOperationSpec);\n  }\n\n  /**\n   * Get the status of an analysis job.  A job may consist of one or more tasks.  Once all tasks are\n   * completed, the job will transition to the completed state and results will be available for each\n   * task.\n   * @param jobId Job ID for Analyze\n   * @param options The options parameters.\n   */\n  analyzeStatus(\n    jobId: string,\n    options?: GeneratedClientAnalyzeStatusOptionalParams\n  ): Promise<GeneratedClientAnalyzeStatusResponse> {\n    return this.sendOperationRequest(\n      { jobId, options },\n      analyzeStatusOperationSpec\n    );\n  }\n\n  /**\n   * Get details of the healthcare prediction job specified by the jobId.\n   * @param jobId Job ID\n   * @param options The options parameters.\n   */\n  healthStatus(\n    jobId: string,\n    options?: GeneratedClientHealthStatusOptionalParams\n  ): Promise<GeneratedClientHealthStatusResponse> {\n    return this.sendOperationRequest(\n      { jobId, options },\n      healthStatusOperationSpec\n    );\n  }\n\n  /**\n   * Cancel healthcare prediction job.\n   * @param jobId Job ID\n   * @param options The options parameters.\n   */\n  cancelHealthJob(\n    jobId: string,\n    options?: GeneratedClientCancelHealthJobOptionalParams\n  ): Promise<GeneratedClientCancelHealthJobResponse> {\n    return this.sendOperationRequest(\n      { jobId, options },\n      cancelHealthJobOperationSpec\n    );\n  }\n\n  /**\n   * Start a healthcare analysis job to recognize healthcare related entities (drugs, conditions,\n   * symptoms, etc) and their relations.\n   * @param input Collection of documents to analyze.\n   * @param options The options parameters.\n   */\n  health(\n    input: MultiLanguageBatchInput,\n    options?: GeneratedClientHealthOptionalParams\n  ): Promise<GeneratedClientHealthResponse> {\n    return this.sendOperationRequest({ input, options }, healthOperationSpec);\n  }\n\n  /**\n   * The API returns a list of general named entities in a given document. For the list of supported\n   * entity types, check <a href=\"https://aka.ms/taner\">Supported Entity Types in Text Analytics API</a>.\n   * See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list\n   * of enabled languages.\n   * @param input Collection of documents to analyze.\n   * @param options The options parameters.\n   */\n  entitiesRecognitionGeneral(\n    input: MultiLanguageBatchInput,\n    options?: GeneratedClientEntitiesRecognitionGeneralOptionalParams\n  ): Promise<GeneratedClientEntitiesRecognitionGeneralResponse> {\n    return this.sendOperationRequest(\n      { input, options },\n      entitiesRecognitionGeneralOperationSpec\n    );\n  }\n\n  /**\n   * The API returns a list of entities with personal information (\\\"SSN\\\", \\\"Bank Account\\\" etc) in the\n   * document. For the list of supported entity types, check <a href=\"https://aka.ms/tanerpii\">Supported\n   * Entity Types in Text Analytics API</a>. See the <a href=\"https://aka.ms/talangs\">Supported languages\n   * in Text Analytics API</a> for the list of enabled languages.\n   *\n   * @param input Collection of documents to analyze.\n   * @param options The options parameters.\n   */\n  entitiesRecognitionPii(\n    input: MultiLanguageBatchInput,\n    options?: GeneratedClientEntitiesRecognitionPiiOptionalParams\n  ): Promise<GeneratedClientEntitiesRecognitionPiiResponse> {\n    return this.sendOperationRequest(\n      { input, options },\n      entitiesRecognitionPiiOperationSpec\n    );\n  }\n\n  /**\n   * The API returns a list of recognized entities with links to a well known knowledge base. See the <a\n   * href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled\n   * languages.\n   * @param input Collection of documents to analyze.\n   * @param options The options parameters.\n   */\n  entitiesLinking(\n    input: MultiLanguageBatchInput,\n    options?: GeneratedClientEntitiesLinkingOptionalParams\n  ): Promise<GeneratedClientEntitiesLinkingResponse> {\n    return this.sendOperationRequest(\n      { input, options },\n      entitiesLinkingOperationSpec\n    );\n  }\n\n  /**\n   * The API returns a list of strings denoting the key phrases in the input text. See the <a\n   * href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled\n   * languages.\n   * @param input Collection of documents to analyze.\n   * @param options The options parameters.\n   */\n  keyPhrases(\n    input: MultiLanguageBatchInput,\n    options?: GeneratedClientKeyPhrasesOptionalParams\n  ): Promise<GeneratedClientKeyPhrasesResponse> {\n    return this.sendOperationRequest(\n      { input, options },\n      keyPhrasesOperationSpec\n    );\n  }\n\n  /**\n   * The API returns the detected language and a numeric score between 0 and 1. Scores close to 1\n   * indicate 100% certainty that the identified language is true. See the <a\n   * href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled\n   * languages.\n   * @param input Collection of documents to analyze for language endpoint.\n   * @param options The options parameters.\n   */\n  languages(\n    input: LanguageBatchInput,\n    options?: GeneratedClientLanguagesOptionalParams\n  ): Promise<GeneratedClientLanguagesResponse> {\n    return this.sendOperationRequest(\n      { input, options },\n      languagesOperationSpec\n    );\n  }\n\n  /**\n   * The API returns a detailed sentiment analysis for the input text. The analysis is done in multiple\n   * levels of granularity, start from the a document level, down to sentence and key terms (targets and\n   * assessments).\n   * @param input Collection of documents to analyze.\n   * @param options The options parameters.\n   */\n  sentiment(\n    input: MultiLanguageBatchInput,\n    options?: GeneratedClientSentimentOptionalParams\n  ): Promise<GeneratedClientSentimentResponse> {\n    return this.sendOperationRequest(\n      { input, options },\n      sentimentOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst analyzeOperationSpec: coreClient.OperationSpec = {\n  path: \"/analyze\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      headersMapper: Mappers.GeneratedClientAnalyzeHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.endpoint, Parameters.apiVersion],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst analyzeStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/analyze/jobs/{jobId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AnalyzeJobState\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.includeStatistics,\n    Parameters.top,\n    Parameters.skip\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.apiVersion, Parameters.jobId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst healthStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/entities/health/jobs/{jobId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HealthcareJobState\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.includeStatistics,\n    Parameters.top,\n    Parameters.skip\n  ],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.apiVersion,\n    Parameters.jobId1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst cancelHealthJobOperationSpec: coreClient.OperationSpec = {\n  path: \"/entities/health/jobs/{jobId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.GeneratedClientCancelHealthJobHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.apiVersion,\n    Parameters.jobId1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst healthOperationSpec: coreClient.OperationSpec = {\n  path: \"/entities/health/jobs\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      headersMapper: Mappers.GeneratedClientHealthHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [\n    Parameters.modelVersion,\n    Parameters.stringIndexType,\n    Parameters.loggingOptOut\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.apiVersion],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst entitiesRecognitionGeneralOperationSpec: coreClient.OperationSpec = {\n  path: \"/entities/recognition/general\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EntitiesResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [\n    Parameters.includeStatistics,\n    Parameters.modelVersion,\n    Parameters.stringIndexType,\n    Parameters.loggingOptOut\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.apiVersion],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst entitiesRecognitionPiiOperationSpec: coreClient.OperationSpec = {\n  path: \"/entities/recognition/pii\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PiiResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [\n    Parameters.includeStatistics,\n    Parameters.modelVersion,\n    Parameters.stringIndexType,\n    Parameters.loggingOptOut,\n    Parameters.domain,\n    Parameters.piiCategories\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.apiVersion],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst entitiesLinkingOperationSpec: coreClient.OperationSpec = {\n  path: \"/entities/linking\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EntityLinkingResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [\n    Parameters.includeStatistics,\n    Parameters.modelVersion,\n    Parameters.stringIndexType,\n    Parameters.loggingOptOut\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.apiVersion],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst keyPhrasesOperationSpec: coreClient.OperationSpec = {\n  path: \"/keyPhrases\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyPhraseResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [\n    Parameters.includeStatistics,\n    Parameters.modelVersion,\n    Parameters.loggingOptOut\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.apiVersion],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst languagesOperationSpec: coreClient.OperationSpec = {\n  path: \"/languages\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LanguageResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.input1,\n  queryParameters: [\n    Parameters.includeStatistics,\n    Parameters.modelVersion,\n    Parameters.loggingOptOut\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.apiVersion],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst sentimentOperationSpec: coreClient.OperationSpec = {\n  path: \"/sentiment\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SentimentResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [\n    Parameters.includeStatistics,\n    Parameters.modelVersion,\n    Parameters.stringIndexType,\n    Parameters.loggingOptOut,\n    Parameters.opinionMining\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.apiVersion],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n"]}